<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Real Estate Chat Bot</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
  <style>
    /* Enhanced Chat Bot Styles */
    .chat-wrapper {
      position: fixed;
      bottom: 30px;
      right: 30px;
      z-index: 1000;
      font-family: Arial, sans-serif;
    }
    
    .chat-container {
      width: 380px;  /* Increased width */
      background: white;
      border-radius: 15px;
      box-shadow: 0 5px 30px rgba(0,0,0,0.2);
      transform: translateY(100%);
      opacity: 0;
      transition: all 0.3s ease;
      max-height: 0;
      overflow: hidden;
    }
    
    .chat-container.active {
      transform: translateY(0);
      opacity: 1;
      max-height: 750px;
    }
    
    .chat-header {
      background: #2A2A2A;
      color: white;
      padding: 15px;
      border-radius: 15px 15px 0 0;
      cursor: pointer;
      display: flex;
      align-items: center;
      gap: 15px;  /* Increased gap */
    }
    
    .chat-header-icon {
      width: 45px;
      height: 45px;
      background: #D4AF37;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
    }
    
    .chat-body {
      height: 550px;  /* Increased height */
      display: flex;
      flex-direction: column;
    }
    
    .chat-messages {
      flex: 1;
      padding: 20px;
      overflow-y: auto;
      display: flex;
      flex-direction: column;
      gap: 15px;  /* Increased gap */
    }
    
    .message {
      max-width: 85%;
      padding: 15px 20px;
      border-radius: 20px;  /* More rounded corners */
      font-size: 1em;  /* Larger text */
      line-height: 1.4;
      word-wrap: break-word;
    }
    
    .user-message {
      background: #f0f0f0;
      align-self: flex-end;
    }
    
    .bot-message {
      background: #D4AF37;
      color: white;
      align-self: flex-start;
    }
    
    .chat-input {
      padding: 20px;
      border-top: 1px solid #eee;
      display: flex;
      gap: 12px;
      align-items: center;
      background: #f8f8f8;
    }
    
    /* Enhanced Input Field */
    .chat-input input {
      flex: 1;
      padding: 18px 25px;  /* Larger padding */
      border: 2px solid #ddd;
      border-radius: 30px;
      outline: none;
      font-size: 1.1em; 
      min-width: 200px; /* Larger font */
      min-height: 25px;
      transition: border-color 0.3s ease;
    }
    
    .chat-input input:focus {
      border-color: #D4AF37;
    }
    
    /* Improved Send Button */
    .chat-input button {
      background: #D4AF37;
      border: none;
      padding: 12px 20px;  /* Larger button */
      border-radius: 30px;
      color: white;
      cursor: pointer;
      font-size: 1.1em;  /* Larger icon */
      transition: transform 0.2s ease;
    }
    
    .chat-input button:hover {
      transform: scale(1.05);
    }
    
    .chat-toggle {
      position: absolute;
      bottom: 0;
      right: 0;
      background: #D4AF37;
      width: 65px;  /* Larger toggle */
      height: 65px;
      border-radius: 50%;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
      box-shadow: 0 5px 15px rgba(0,0,0,0.2);
      transition: all 0.3s ease;
    }
    
    .chat-toggle:hover {
      transform: scale(1.1) rotate(10deg);
    }
    
    .chat-toggle i {
      color: white;
      font-size: 1.8em;  /* Larger icon */
    }
  </style>
</head>
<body>

  <div class="chat-wrapper">
    <div class="chat-toggle" onclick="toggleChat()">
      <i class="fas fa-comment-dots"></i>
    </div>
    
    <div class="chat-container" id="chatContainer">
      <div class="chat-header" onclick="toggleChat()">
        <div class="chat-header-icon">
          <i class="fas fa-robot"></i>
        </div>
        <div>
          <h3>Real Estate Assistant</h3>
          <p>Click to minimize</p>
        </div>
      </div>
      
      <div class="chat-body">
        <div class="chat-messages" id="chatMessages">
          <div class="message bot-message">
            Hello! How can I assist you with real estate today?
          </div>
        </div>
        
        <div class="chat-input">
          <input type="text" 
                 id="userInput" 
                 placeholder="Type your message here..."
                 autocomplete="off">
          <button onclick="sendMessage()">
            <i class="fas fa-paper-plane"></i>
          </button>
        </div>
      </div>
    </div>
  </div>

  <script>
  let isChatOpen = false;
  
  function toggleChat() {
    const container = document.getElementById('chatContainer');
    isChatOpen = !isChatOpen;
    container.classList.toggle('active');
    if(isChatOpen) document.getElementById('userInput').focus();
  }
  
  function addMessage(message, isUser = false) {
    const messagesDiv = document.getElementById('chatMessages');
    const messageDiv = document.createElement('div');
    messageDiv.className = `message ${isUser ? 'user-message' : 'bot-message'}`;
    messageDiv.textContent = message;
    messagesDiv.appendChild(messageDiv);
    messagesDiv.scrollTop = messagesDiv.scrollHeight;
  }
  
  async function sendMessage() {
    const input = document.getElementById('userInput');
    const message = input.value.trim();
    if (!message) return;
    
    // Auto-open chat if closed
    const container = document.getElementById('chatContainer');
    if (!container.classList.contains('active')) toggleChat();
    
    addMessage(message, true);
    input.value = '';
    input.focus();

    try {
      const response = await fetch('/api/chat', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-Requested-With': 'XMLHttpRequest'
        },
        body: JSON.stringify({ message })
      });

      const data = await response.json();
      addMessage(data.reply || "Sorry, I didn't understand that.");
    } catch (error) {
      addMessage('Currently experiencing technical difficulties. Please try again later.');
    }
  }

  // Enhanced input handling
  document.getElementById('userInput').addEventListener('focus', () => {
    if(!document.getElementById('chatContainer').classList.contains('active')) {
      toggleChat();
    }
  });

  document.getElementById('userInput').addEventListener('keypress', (e) => {
    if (e.key === 'Enter' && !e.shiftKey) {
      e.preventDefault();
      sendMessage();
    }
  });

  // First-time auto-open
  setTimeout(() => {
    if (!localStorage.getItem('chatShown')) {
      toggleChat();
      localStorage.setItem('chatShown', 'true');
    }
  }, 2000);
  </script>
  
</body>
</html>